import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class ColorTheFence {


	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);

		int v = Integer.parseInt(in.readLine());
		
		Digit[] arr = new Digit[9];
		
		StringTokenizer s = new StringTokenizer(in.readLine());
		
		for (int i = 0; i < 9; i++)
			arr[i] = new Digit(i + 1, Integer.parseInt(s.nextToken()));
		
		Arrays.sort(arr);
		
		for (int i = 1; i < (v / arr[0].paint); i++)
			out.print(arr[0].value);
		
		v = (v % arr[0].paint) + arr[0].paint;
		
		int maxDigit = 1;
		
		for (int i = 0; i < 9; i++) {
			if(v >= arr[i].paint && arr[i].value > maxDigit)
				maxDigit = arr[i].value;
		}
		
		out.print(maxDigit);
		
		out.flush();
		out.close();
	}

	static class Digit implements Comparable<Digit>{
		int value;
		int paint;

		public Digit(int value, int paint) {
			this.value = value;
			this.paint = paint;
		}

		@Override
		public int compareTo(Digit o) {
			if(this.paint == o.paint)
				return o.value - this.value;

			return this.paint - o.paint;
		}
	}
}
