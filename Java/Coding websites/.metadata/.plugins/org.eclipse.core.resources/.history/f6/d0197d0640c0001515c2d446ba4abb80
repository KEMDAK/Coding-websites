import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class TheSettlersOfCatan {

	static boolean[][] adj;
	static boolean[] visited;
	
	public static void main(String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		
		while(true){
			StringTokenizer s = new StringTokenizer(in.readLine());
			
			int n = Integer.parseInt(s.nextToken());
			int m = Integer.parseInt(s.nextToken());
			
			if(n == 0 && m == 0)
				break;
			
			adj = new boolean[n][n];
			visited = new boolean[n];
			
			for (int i = 0; i < m; i++) {
				s = new StringTokenizer(in.readLine());
				
				int src = Integer.parseInt(s.nextToken());
				int dest = Integer.parseInt(s.nextToken());
				
				adj[src][dest] = true;
				adj[dest][src] = true;
			}
			
			for (int i = 0; i < n; i++) {
				dfs(i);
			}
		}
		
		out.flush();
		out.close();
	}

	public static void dfs(int i) {
		visited[i] = true;
		
		for (int j = 0; j < adj[i].length; j++) {
			if(adj[i][j] && !visited[j])
				dfs(j);
		}
		
		visited[i] = false;
	}
}
