import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class ColorTheFence {


	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));

		int v = Integer.parseInt(in.readLine());

		Digit[] arr = new Digit[9];

		StringTokenizer s = new StringTokenizer(in.readLine());

		for (int i = 0; i < 9; i++)
			arr[i] = new Digit(i + 1, Integer.parseInt(s.nextToken()));

		Arrays.sort(arr);

		StringBuilder out = new StringBuilder("");

		if(v >= arr[0].paint){

			for (int i = 0; i < (v / arr[0].paint); i++)
				out.append(arr[0].value);

			v = v % arr[0].paint;

			for (int i = 0; i < out.length(); i++) {
				int maxDigit = out.charAt(i) - '0';
				
				int paid = 0;
				
				for (int j = 0; j < 9; j++) {
					if(v >= arr[j].paint && arr[j].value > maxDigit){
						maxDigit = arr[j].value;
						v += arr[0].paint;
						paid += arr[j].paint;
					}
				}

				v -= paid;
				out.replace(i, i, maxDigit + "");
			}
		}
		else
			out.append(-1);

		System.out.println(out);
	}

	static class Digit implements Comparable<Digit>{
		int value;
		int paint;

		public Digit(int value, int paint) {
			this.value = value;
			this.paint = paint;
		}

		@Override
		public int compareTo(Digit o) {
			if(this.paint == o.paint)
				return o.value - this.value;

			return this.paint - o.paint;
		}
	}
}
