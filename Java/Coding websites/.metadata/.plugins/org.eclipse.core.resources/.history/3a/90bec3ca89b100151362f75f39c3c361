import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class LevkoAndPermutation {

	public static void main(String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		
		StringTokenizer s = new StringTokenizer(in.readLine());
		
		int n = Integer.parseInt(s.nextToken());
		int k = Integer.parseInt(s.nextToken());
		
		int t = n - 1;
		
		int[] p = new int[n];
		
		for (int i = 0; i < p.length; i++)
			p[i] = i + 1;
		
		for (int i = 1; i < p.length - 1 && t != k; i++) {
			if(t == k + 1){
				int j;
				for (j = 1; j < p.length; j++)
					if(p[j] == j + 1)
						break;
				
				p[0] = p[j];
				p[j] = 1;
				break;
			}
			
			int temp = p[i + 1];
			p[i + 1] = p[i];
			p[i] = temp;
			
			i++;
			k -=2;
		}
		
		for (int i = 0; i < p.length; i++) {
			out.print(p[i] + " ");
		}
		
		out.flush();
		out.close();
	}
}
