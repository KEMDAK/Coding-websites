import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class GivenLengthandSumofDigits {

	public static void main (String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(in.readLine());

		int m = Integer.parseInt(st.nextToken());
		int s = Integer.parseInt(st.nextToken());


		if(!can(m, s)){
			System.out.println("-1 -1");
			return;
		}

		String minimum = "";
		String maximum = "";

		int sum = s;
		for(int i = 1; i <= m; i++){
			for(int j = 0; j < 10; j++){
				if((i > 1 || j > 0 || (m == 1 && j == 0)) && can(m - i, sum - j)){
					minimum += j;
					sum -= j;
					break;
				}
			}
		}

		sum = s;
		for(int i = 1; i <= m; i++){
			for(int j = 9; j > -1; j--){
				if((i > 1 || j > 0 || (m == 1 && j == 0)) && can(m - i, sum - j)){
					maximum += j;
					sum -= j;
					break;
				}
			}
		}

		if(maximum.length() != m || minimum.length() != m){
			System.out.println("-1 -1");
			return;
		}

		System.out.println(minimum +  " " + maximum);
	}

	public static boolean can (int m, int s){
		return s >= 0 && s <= m * 9;
	}


}