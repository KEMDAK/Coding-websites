import java.awt.Point;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;
import java.util.TreeSet;

public class D {

	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		
		StringTokenizer s = new StringTokenizer(in.readLine());
		Point p1 = new Point(Integer.parseInt(s.nextToken()), Integer.parseInt(s.nextToken()));
		s = new StringTokenizer(in.readLine());
		Point p2 = new Point(Integer.parseInt(s.nextToken()), Integer.parseInt(s.nextToken()));
		s = new StringTokenizer(in.readLine());
		Point p3 = new Point(Integer.parseInt(s.nextToken()), Integer.parseInt(s.nextToken()));
		
		int res = 0;
		
		TreeSet<Integer> x = new TreeSet<>();
		TreeSet<Integer> y = new TreeSet<>();
		
		boolean bp12 = false;
		boolean bp23 = false;
		boolean bp13 = false;
		
		int st = 0;
		
		if(p1.x == p2.x){
			res++;
			st++;
			x.add(p1.x);
			bp12 =true;
		}
		if(p1.x == p3.x && !x.contains(p1.x)){
			res++;
			st++;
			x.add(p1.x);
			bp13 = true;
		}
		if(p2.x == p3.x && !x.contains(p2.x)){
			res++;
			st++;
			x.add(p2.x);
			bp23 = true;
		}
		if(p1.y == p2.y){
			res++;
			st++;
			y.add(p1.y);
			bp12 = true;
		}
		if(p1.y == p3.y && !y.contains(p1.y)){
			res++;
			st++;
			y.add(p1.y);
			bp13 = true;
		}
		if(p2.y == p3.y && !y.contains(p2.y)){
			res++;
			st++;
			y.add(p2.y);
			bp23 = true;
		}
		
//		System.out.println(x.size());
//		System.out.println(y.size());
//		if(res == 0){
			if(p1.x != p2.x && p1.y != p2.y && !bp12){
				res += 2;
				bp12 = true;
			}
			if(p2.x != p3.x && p2.y != p3.y && !bp23){
				res += 2;
				bp23 = true;
			}
			if(p1.x != p3.x && p1.y != p3.y && !bp13){
				res += 2;
				bp13 = true;
			}
//		}
		
		out.println(res );//- st);
		
		out.flush();
		out.close();
	}
}
