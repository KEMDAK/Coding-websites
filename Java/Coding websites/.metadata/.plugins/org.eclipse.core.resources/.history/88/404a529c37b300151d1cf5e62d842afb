import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class NewYearAndDomino {

	
	public static void main(String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		
		StringTokenizer s = new StringTokenizer(in.readLine());
		
		int h = Integer.parseInt(s.nextToken());
		int w = Integer.parseInt(s.nextToken());
		
		int[][] map = new int[h][w];
		
		String st = in.readLine();
		for (int j = 1; j < w; j++) {
			if(st.charAt(j) == '#'){
				if(j + 1 < w)
					map[0][j + 1]--;
				if(1 < h)
					map[1][j]--;
				
				map[0][j] = map[0][j - 1];
			}
			else
				map[0][j] = map[0][j - 1] + 1;
		}
		
		for (int i = 1; i < h; i++) {
			st = in.readLine();
			
			if(st.charAt(0) == '#'){
				if(1 < w)
					map[i][1]--;
				if(i + 1 < h)
					map[i + 1][0]--;
				
				map[i][0] = map[i - 1][0];
			}
			else
				map[i][0] = map[i - 1][0] + 1;
			
			for (int j = 1; j < w; j++) {
				if(st.charAt(j) == '#'){
					if(j + 1 < w)
						map[i][j + 1]--;
					if(i + 1 < h)
						map[i + 1][j]--;
					
					map[i][j] = map[i - 1][j] + map[i][j - 1] - map[i - 1][j - 1];
				}
				else{
					map[i][j] = map[i - 1][j] + map[i][j - 1] - map[i - 1][j - 1] + 2;
				}
			}
		}
		
		int q = Integer.parseInt(in.readLine());
		
		for (int i = 0; i < q; i++) {
			s = new StringTokenizer(in.readLine());
			
			int x1 = Integer.parseInt(s.nextToken()) - 1;
			int y1 = Integer.parseInt(s.nextToken()) - 1;
			int x2 = Integer.parseInt(s.nextToken()) - 1;
			int y2 = Integer.parseInt(s.nextToken()) - 1;
			
			out.println(map[x2][y2] - map[x1 - 1][y2] - map[x2][y1 - 1] + map[x1 - 1][y1 - 1]);
		}
		
		out.flush();
		out.close();
	}
}
























