import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class ExactSum_11057 {

	static int[] books;

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);

		long ctime = System.currentTimeMillis();
		while(System.currentTimeMillis() - ctime < 3000){

		}

		int c = 0;
		while(in.ready()){
			int n = Integer.parseInt(in.readLine());

			if(c != 0)
				out.println();
			c++;

			books = new int[n];

			StringTokenizer s = new StringTokenizer(in.readLine());
			for (int i = 0; i < n; i++) {
				books[i] = Integer.parseInt(s.nextToken());
			}

			Arrays.sort(books);

			int m = Integer.parseInt(in.readLine());

			in.readLine();

			int minDiff = 1000000;

			int a = 0, b = 0;
			for (int i = 0; i < n; i++) {
				int temp = books[i];
				books[i] = 10000000;
				System.out.println("i: " + i + " key: " + (m - temp));
				System.out.println(Arrays.toString(books));
				int j = Arrays.binarySearch(books, m - temp);
				System.out.println("j: " + j);
				books[i] = temp;
				if(j < 0 || i == j || books[i] + books[j] != m) continue;

				if(Math.abs(books[i] - books[j]) < minDiff && i <= j){
					minDiff = Math.abs(books[i] - books[j]);
					a = i;
					b = j;
				}
			}

			out.printf("Peter should buy books whose prices are %d and %d.\n", books[a], books[b]);
		}

		out.println();
		out.flush();
		out.close();
	}
}
