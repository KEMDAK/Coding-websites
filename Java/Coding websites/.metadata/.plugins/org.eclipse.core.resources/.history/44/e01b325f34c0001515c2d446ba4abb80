import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class BackToThe8Queens_11085 {

	static int[][] comb;
	static int c = 0;

	public static void main(String[] args) throws IOException {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);

		int t = 1;

		generate(1, new int[8]);
		
		System.out.println(c);
//		while(true){
//			StringTokenizer s = new StringTokenizer(in.readLine());
//
//			int[] cur = new int[8];
//			for (int i = 0; i < 8; i++) {
//				cur[i] = Integer.parseInt(s.nextToken());
//			}
//
//
//		}
	}

	public static void generate(int i, int[] x){
		if(i == 8){
			c++;
			return;
		}

		boolean valid  = true;

		for (int m2 = 1; m2 <= 8; m2++) {
			int xc = m2;
			int yc = i;

			for (int n = 0; n < i && valid; n++) {
				if(n == m2) continue;
				int xi = x[n];
				int yi = n + 1;

				if(Math.abs(xi - xc) == Math.abs(yi - yc)){
					valid = false;
				}
			}

			if(valid){
				int[] clone = x.clone();
				clone[yc - 1] = m2;
				
				generate(i + 1, clone);
			}
		}
	}
}
